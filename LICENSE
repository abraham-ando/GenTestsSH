MIT License

Copyright (c) 2024 Auto-Heal Framework

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
# Changelog

All notable changes to this project will be documented in this file.

## [1.0.0] - 2024-10-22

### Added
- Initial release of Playwright Auto-Heal Framework
- LLM integration for test failure analysis (OpenAI & Anthropic)
- Automatic patch generation and application
- Git integration for auto-commit
- Playwright trace and screenshot capture
- CLI with multiple commands (run, status, restore, config-check, init)
- Comprehensive logging with loguru and structlog
- Configuration via .env files
- Backup system for test files
- Sample HTML pages for testing (login + dashboard)
- Test suite with auto-heal capabilities
- GitHub Actions workflow for CI/CD
- Accessibility compliance (WCAG 2.2 + RGAA 4)
- Performance optimizations
- Complete documentation (README, Quick Start, Advanced Examples)

### Features
- **Auto-Healing**: Tests automatically repair themselves when selectors fail
- **Confidence Scoring**: LLM provides confidence scores for patch quality
- **Robust Selectors**: Prioritizes data-testid, ARIA, and text-based selectors
- **Monitoring**: Comprehensive logging and trace viewing
- **Customizable**: Configurable retry logic, thresholds, and providers
- **CI/CD Ready**: GitHub Actions workflow included

### Documentation
- PROJECT_README.md: Complete documentation
- QUICK_START.md: Getting started guide
- ADVANCED_EXAMPLES.md: Advanced usage patterns
- Inline code documentation with docstrings

